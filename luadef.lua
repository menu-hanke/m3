local buffer = require "string.buffer"
local cdef = buffer.new()
local code = buffer.new()
local fname = ...
local fp = fname and assert(io.open(fname, "r")) or io.stdin
local parens = { ["("]=1, [")"]=-1, ["["]=2^8, ["]"]=-2^8, ["{"]=2^16, ["}"]=-2^16 }
local function die(s) io.stderr:write("luadef: ", s, "\n") os.exit(1) end
while true do
	local line = fp:read("*l")
	if not line then break end
	if line:match("@cdef@") then
		line = line:gsub("@cdef@", "")
		local match = 0
		while true do
			cdef:put(line)
			for p in line:gmatch("[%(%)%[%]{}]") do
				match = match + parens[p]
			end
			if match == 0 then break end
			cdef:put("\n")
			line = fp:read("*l")
			if not line then die("unexpected eof (unbalanced brackets)") end
		end
		if not line:match(";%s*$") then
			cdef:put(";")
		end
		cdef:put("\n")
	elseif line:match("@lua@") then
		code:put((line:gsub("@lua@", "")))
	end
end
print("-- autogenerated by luadef.lua - don't edit this file manually.")
print("local ffi = require 'ffi'")
print("local cdef = {}")
print("ffi.cdef [[")
print(cdef)
print("]]")
print(code)
print("return cdef")
